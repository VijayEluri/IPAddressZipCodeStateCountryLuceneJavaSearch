#the name of the zip file containing all the csv data
ipsearch.file.zip=ipinfodb_one_table_full.csv.zip
#the URL that this will be downloaded from.  Uses the same name as the ${ipsearch.file.zip}
ipsearch.url.csv=http://mirrors.ipinfodb.com/ipinfodb/ip_database/current/${ipsearch.file.zip}
#if you already downloaded the CSV file and just would like to start parsing, then have it at and set this to false.
ipsearch.should.download=true
#The name of the csv file that was downloaded
ipsearch.fileinzip=ip_group_city.csv
#how often the reader does a log line before closing.  Set to -1 to never log.
ipsearch.reader.heartbeat=50000
#in seconds
ipsearch.timeout.queue=20
#The capacity of messages that will be kept in memory before the queue is blocked
ipsearch.queue.capacity=200000
#Time out value when a queue is full before we just give up on the thread, time in seconds
ipsearch.poll.timeout=20
#the name of the index directory that will write to disk
ipsearch.writer.index.name=ipindex
#the number of threads that will run
ipsearch.writer.num.threads=4
#NOTE: max buffered docs is going to get set to DISABLE_AUTO_FLUSH because it will maximize the performance for indexing
#the size of the ram buffer before flushing everything to disk.  Makes stuff faster.  Setting to 1GB to be bad ass
ipsearch.writer.ram.buffer.mb=1024
##setting the merge factor determines how often the segments are merged by addDocument.  By default it's 10, let's make it 100000
ipsearch.writer.merge.factor=250
##The number of threads to be used at any given moment to fill into the writer
ipsearch.writer.num.threads=10
##The size of the thread queue to be ready to process more documents.  I've found that 500 is plenty ;)  Each thread will just
##hold a single document instance so they're pretty lightweight so it's good to have them buffered up since lucene 
##processes them fast
ipsearch.writer.queue.size=500
#############
##The type of directory to use to create the instance.
##Uncomment for the appropriate type
#############
## Unix, lots of memory
##If you are on a non-windows machine and have a 64-bit JVM, the MMapDirectory is a good choice
ipsearch.directory.factory.class=org.apache.lucene.store.MMapDirectory
##Most other OSes
##If you have a windows machine, this is about your only choice.  It creates a simple in the long run, 
##but this particular factory is made to choose what's best for you and if lucene ever upgrades and windows gets a good filesystem,
##it might decide for you and choose a better factory
#ipsearch.directory.factory.class=org.apache.lucene.story.FSDirectory



